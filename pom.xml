<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.jstfs</groupId>
	<artifactId>jstfs-pom</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<properties>
		<distr.release.snapshot>-SNAPSHOT</distr.release.snapshot>
		<build.finalName>${project.artifactId}</build.finalName>
		<svn.release.user>svn_release</svn.release.user>
		<svn.release.pwd>svn_release</svn.release.pwd>
		<spring.version>4.3.23.RELEASE</spring.version>
		<maven.compiler.source>1.8</maven.compiler.source>
    	<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<!-- SVN Server Config -->
	<!-- 
	<scm>
		<connection>scm:svn:https://ip:port/svn/jstfs-pom/trunk</connection>
		<developerConnection>scm:svn:https://ip:port/svn/jstfs-pom/trunk</developerConnection>
		<url>https://ip:port/svn/jstfs-pom</url>
	</scm>
	-->

	<repositories>
		<repository>
			<id>nexus repository</id>
			<name>Nexus Repository</name>
			<url>http://127.0.0.1:8081/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories> 

	<pluginRepositories>
		<pluginRepository>
			<id>nexus plugin repository</id>
			<name>Nexus Plugin Repository</name>
			<url>http://127.0.0.1:8081/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>distribution nexus releases repo</id>
			<name>Distribution Nexus Releases Repo</name>
			<url>http://127.0.0.1:8081/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>distribution nexus snapshot repo</id>
			<name>Distribution Nexus Snapshot Repo</name>
			<url>http://127.0.0.1:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<!-- commons工具类 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>3.9</version>
		</dependency>
		<dependency>
		    <groupId>commons-collections</groupId>
		    <artifactId>commons-collections</artifactId>
		    <version>3.2.2</version>
		</dependency>
		
		<!-- JSON -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>1.2.83</version> 
		</dependency>
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
			<!-- 使用JUnit做单元测试 -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.13.1</version>
				<scope>test</scope>
			</dependency>
			
			<!-- 使用testNG做单元测试 -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>7.7.0</version>
				<scope>test</scope>
			</dependency>
			
		</dependencies>
	</dependencyManagement>
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
					</configuration>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>		<!-- 将主代码打源码jar包,该目标默认绑定在package阶段 -->
								<goal>test-jar-no-fork</goal>	<!-- 将测试代码打源码jar包,该目标默认绑定在package阶段 -->
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<!-- 打jar包的插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.1</version>
					<configuration>
						<archive>	<!-- jar包中 META-INF/MANIFEST.MF 文件中生成如下内容 -->
							<manifestEntries>
								<Implementation-Title>${project.name}</Implementation-Title>
								<Implementation-Version>${project.version}</Implementation-Version>
								<Implementation-Vendor>com.jstfs</Implementation-Vendor>
								<Implementation-Vendor-Id>com.jstfs</Implementation-Vendor-Id>
								<Implementation-URL>http://www.jstfs.com</Implementation-URL>
							</manifestEntries>
						</archive>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>	<!-- test-jar默认也是绑定在package阶段 -->
							<goals>
								<goal>test-jar</goal>	<!-- 该目标可以将测试代码打成jar包,也作为构件供其他构件重用该测试代码 -->
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<!-- 执行测试的插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
	   				<artifactId>maven-surefire-plugin</artifactId>
	   				<version>2.22.2</version>
				</plugin>
				
				<!-- 生成项目站点的插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				
				<!-- 打war包的插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.2.1</version>
					<configuration>
						<webResources>
							<resource>
								<filtering>true</filtering>	<!-- 打war包时进行是否进行变量替换,默认false不替换 -->
								<directory>src/main/webapp</directory>	<!-- 指定web资源文件的位置,必须指定,经测试没有默认值 -->
								<includes>	<!-- 对哪些web资源文件做变量替换,而不是指定打war包时包含哪些web资源文件 -->
									<include>**/*.css</include>
									<include>**/*.js</include>
								</includes>
							</resource>
						</webResources>
					</configuration>
				</plugin>
				
				<!-- 打javadoc包的插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				
				<!-- 自动发布的插件,超级POM中定义的版本号是2.0-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<username>${svn.release.user}</username>
						<password>${svn.release.pwd}</password>
						<!-- 如果不想激活超级POM中的"release-profile"这个profile,则可以将useReleaseProfile参数设置为false,其默认为true -->
						<!-- 这样就不会在执行perform插件目标的时候,生成源码包和javadac包这两个jar包了 -->
						<useReleaseProfile>false</useReleaseProfile>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.9.5</version>
					<configuration>
						<username>${svn.release.user}</username>
						<password>${svn.release.pwd}</password>
					</configuration>
				</plugin>
				
				<!-- 
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat6-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<path>/${project.build.finalName}</path>
						<contextReloadable>true</contextReloadable>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<path>/${project.build.finalName}</path>
						<contextReloadable>true</contextReloadable>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.1.1</version>
					<configuration>
						<finalName>${project.build.finalName}</finalName>
						<descriptors>
							<descriptor>assembly.xml</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<execution>
							<id>distro-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				-->
			</plugins>
		</pluginManagement>
	</build>
</project>